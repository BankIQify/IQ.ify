
import { insertQuestions } from "./questionUtils.ts";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

/**
 * Handles questions that have been generated by AI services
 */
export async function handleQuestionGenerated(
  supabase: ReturnType<typeof createClient>, 
  payload: any
) {
  console.log('Handling question_generated event');
  console.log('Payload structure:', Object.keys(payload).join(', '));
  
  const { questions, sub_topic_id, prompt } = payload;
  
  if (!sub_topic_id) {
    console.error('Missing sub_topic_id in payload');
    return { success: false, error: 'Missing sub_topic_id in payload' };
  }
  
  if (!questions || !Array.isArray(questions)) {
    console.error('Missing or invalid questions array in payload');
    return { success: false, error: 'Missing or invalid questions array in payload' };
  }
  
  if (questions.length === 0) {
    console.error('Empty questions array in payload');
    return { success: false, error: 'Questions array is empty' };
  }
  
  console.log(`Found ${questions.length} questions to process`);
  
  // Call the inserted questions function to handle question insertion
  return await insertQuestions(supabase, questions, sub_topic_id, prompt);
}
